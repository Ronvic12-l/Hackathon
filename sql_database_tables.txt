CREATE TABLE users (
	user_id INTEGER NOT NULL AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL ,
	email VARCHAR(255) NOT NULL UNIQUE,
	password VARCHAR(255) NOT NULL,
	date_created DATETIME DEFAULT CURRENT_TIMESTAMP,

	PRIMARY KEY(user_id),
	INDEX USING BTREE (name)
) ENGINE = InnoDB;

CREATE TABLE dailyscore (
	score_id INTEGER NOT NULL AUTO_INCREMENT,
	user_id INTEGER NOT NULL,
	score INTEGER NOT NULL,
	date_created DATETIME DEFAULT CURRENT_TIMESTAMP,
	
	PRIMARY KEY(score_id),
	INDEX USING BTREE (user_id),
	
	CONSTRAINT FOREIGN KEY (user_id) REFERENCES users (user_id)
	 ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

CREATE TABLE friends (
	friend_id INTEGER NOT NULL AUTO_INCREMENT,
	user_id1 INTEGER NOT NULL,
	user_id2 INTEGER NOT NULL,
	date_created DATETIME DEFAULT CURRENT_TIMESTAMP,
	
	PRIMARY KEY(friend_id),
	INDEX USING BTREE (user_id1),
	INDEX USING BTREE (user_id2),

	CONSTRAINT FOREIGN KEY (user_id1) REFERENCES users (user_id)
	 ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FOREIGN KEY (user_id2) REFERENCES users (user_id)
	 ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

======

SELECT users.user_id, users.name, users.email, users.password, users.date_created, GROUP_CONCAT(DISTINCT friends.user_id1 SEPARATOR ',') FROM users JOIN friends ON (users.user_id = friends.user_id1 OR users.user_id = friends.user_id2) WHERE email='rtsfred3@gmail.com'

------

SELECT users.user_id, users.name, users.email, users.password, users.date_created, GROUP_CONCAT(DISTINCT friends.user_id2 SEPARATOR ',') FROM users JOIN friends ON users.user_id = friends.user_id1 WHERE email='rtsfred3@gmail.com'
UNION ALL
SELECT users.user_id, users.name, users.email, users.password, users.date_created, GROUP_CONCAT(DISTINCT friends.user_id1 SEPARATOR ',') FROM users JOIN friends ON users.user_id = friends.user_id2 WHERE email='rtsfred3@gmail.com'